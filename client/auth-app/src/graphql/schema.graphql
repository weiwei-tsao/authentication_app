type Query {
  me: User
  users: [User!]!
}

type Mutation {
  register(input: RegisterInput!): User!
  login(input: LoginInput!): AuthPayload!
  updateUser(input: UpdateUserInput!): User!
  deleteUser(id: ID!): Boolean!
}

type User {
  id: ID!
  email: String!
  username: String!
  avatarUrl: String
  isActive: Boolean!
  isVerified: Boolean!
  lastLogin: String!
  lastPasswordChange: String
  createdAt: String!
  updatedAt: String!
}

type AuthPayload {
  token: String!
  user: User!
}

input RegisterInput {
  email: String!
  password: String!
  username: String
}

input LoginInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  id: ID!
  email: String
  name: String
  password: String
}
